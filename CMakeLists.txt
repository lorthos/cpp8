cmake_minimum_required(VERSION 3.10)
project(cpp8)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)

if (NOT EMSCRIPTEN)
    set(CMAKE_CXX_EXTENSIONS ON)
    if ((CMAKE_CXX_COMPILER_ID MATCHES "Clang") OR (CMAKE_CXX_COMPILER_ID MATCHES "GNU"))
        add_compile_options(-fms-extensions)
    endif ()
    message(STATUS "Build with C++ language extensions")
endif ()

include_directories(core)
add_subdirectory(core)
if (NOT EMSCRIPTEN)
    add_subdirectory(test)
endif ()

add_executable(cpp8 Main.cpp)
target_link_libraries(cpp8 core_lib)

if (EMSCRIPTEN)
    SET(CMAKE_EXECUTABLE_SUFFIX ".html")
    set_target_properties(cpp8 PROPERTIES LINK_FLAGS "-o sdl_2_0_sample.html -s WASM=1 -s USE_SDL=2 -s USE_SDL_MIXER=2 --preload-file ../roms --preload-file ../assets --use-preload-plugins -s FORCE_FILESYSTEM=1")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -s USE_SDL=2")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-c++11-narrowing")
else ()
    find_package(SDL2 REQUIRED)
    include_directories(${SDL2_INCLUDE_DIR})
    find_package(SDL2_MIXER REQUIRED)
    include_directories(${SDL2_MIXER_INCLUDE_DIR})
endif ()

target_link_libraries(cpp8 ${SDL2_LIBRARY})
target_link_libraries(cpp8 ${SDL2_MIXER_LIBRARY})

#pragma once
#define bit8 unsigned char
#define bit16 unsigned short

class Memory {
public:
    Memory();

    static const int MEMORY_SIZE = 4096;

    void set(int index, unsigned char val);

    bit8 get(int index);

    void copyFrom(const char *rom, long size, int startAddress = 0);

    bit16 getOpCode(int index);

private:

    //memory
    /**
     * http://devernay.free.fr/hacks/chip8/C8TECH10.HTM#memmap
     *
     * capable of accessing up to 4KB (4,096 bytes) of RAM, from location 0x000 (0) to 0xFFF (4095).
     */
    bit8 heap[MEMORY_SIZE]{};

    static void mPrecondition(int index);


    //default sprites
    static constexpr char mDefaultSprites[] = {
            0xf0, 0x90, 0x90, 0x90, 0xf0,
            0x20, 0x60, 0x20, 0x20, 0x70,
            0xf0, 0x10, 0xf0, 0x80, 0xf0,
            0xf0, 0x10, 0xf0, 0x10, 0xf0,
            0x90, 0x90, 0xf0, 0x10, 0x10,
            0xf0, 0x80, 0xf0, 0x10, 0xf0,
            0xf0, 0x80, 0xf0, 0x90, 0xf0,
            0xf0, 0x10, 0x20, 0x40, 0x40,
            0xf0, 0x90, 0xf0, 0x90, 0xf0,
            0xf0, 0x90, 0xf0, 0x10, 0xf0,
            0xf0, 0x90, 0xf0, 0x90, 0x90,
            0xe0, 0x90, 0xe0, 0x90, 0xe0,
            0xf0, 0x80, 0x80, 0x80, 0xf0,
            0xe0, 0x90, 0x90, 0x90, 0xe0,
            0xf0, 0x80, 0xf0, 0x80, 0xf0,
            0xf0, 0x80, 0xf0, 0x80, 0x80
    };

};

